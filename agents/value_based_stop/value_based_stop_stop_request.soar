### Stop logic for successful planning

sp {stop-request*propose*record-best*first
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs <v>
              ^target <t>
             -^best-trajectory)
   (<v> ^command <cmd>
        ^motor.trajectories <traj>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> -^stop
          ^id <cid>)
   (<traj> ^set <set>)
   (<set> ^command-id <cid>
          ^trajectory <r>)
   (<r> ^id <tid>
        ^waypoints <wv>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name record-best-first
        ^trajectory <tid>
        ^value <wv>)
}

sp {stop-request*apply*record-best*first
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^operator <op>)
   (<op> ^name record-best-first
         ^trajectory <tid>)
-->
   (<s> ^best-trajectory <tid>
        ^start-count (dc))
}

sp {stop-request*record-first*prefer*lowest
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^operator <op1> +
              ^operator <op2> +)
   (<op1> ^name record-best-first
          ^value <v1>)
   (<op2> ^name record-best-first
          ^value <v2> > <v1>)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {stop-request*propose*record-best*update
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs <v>
              ^target <t>
              ^best-trajectory <tid>)
   (<v> ^command <cmd>
        ^motor.trajectories <traj>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^id <cid>)
   (<traj> ^set <set>)
   (<set> ^command-id <cid>
          ^trajectory <curr>
          ^trajectory <comp>)
   (<curr> ^id <tid>
           ^waypoints <bv>)
   (<comp> ^id <alt>
           ^waypoints <wv> < <bv>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name record-best-update
        ^trajectory <alt>
        ^value <wv>)
}


sp {stop-request*apply*record-best*update
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^best-trajectory <prev>
              ^start-count <psc>
              ^operator <op>)
   (<op> ^name record-best-update
         ^trajectory <tid>)
-->
   (<s> ^best-trajectory <prev> -
        ^best-trajectory <tid>
        ^start-count <psc> -
        ^start-count (dc))
}

sp {stop-request*record-update*prefer*lowest
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^operator <op1> +
              ^operator <op2> +)
   (<op1> ^name record-best-update
          ^value <v1>)
   (<op2> ^name record-best-update
          ^value <v2> > <v1>)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {stop-request*propose*init-dc-elapsed
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs <v>
              ^target <t>
              ^start-count
             -^dc-since-update)
   (<v> ^command <cmd>
        ^motor.trajectories <traj>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^id <cid>)
   (<traj> ^set <set>)
   (<set> ^command-id <cid>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name init-dc-elapsed)
}

sp {stop-request*apply*init-dc-elapsed
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^start-count <sc>
              ^operator.name init-dc-elapsed)
-->
   (<s> ^dc-since-update (- (dc) <sc>))
}

sp {stop-request*propose*update-dc-elapsed
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs <v>
              ^target <t>
              ^start-count
              ^dc-since-update)
   (<v> ^command <cmd>
        ^motor.trajectories <traj>)
   (<cmd> ^find-trajectories <ft>
         -^execute-trajectory)
   (<ft> ^id <cid>
         ^status << running continuing >>)
   (<traj> ^set <set>)
   (<set> ^command-id <cid>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name update-dc-elapsed)
}

sp {stop-request*apply*update-dc-elapsed
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^dc-since-update <prev>
              ^start-count <sc>
              ^operator.name update-dc-elapsed)
-->
   (<s> ^dc-since-update <prev> -
        ^dc-since-update (- (dc) <sc>))
}

sp {stop-request*record-update*prefer*update*over*dc
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^operator <op1> +
              ^operator <op2> +)
   (<op1> ^name record-best-update)
   (<op2> ^name << init-dc-elapsed update-dc-elapsed >> )
-->
   (<s> ^operator <op1> > <op2>)
}

sp {stop-request*propose*stop-command
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs <v>
              ^target <t>
              ^dc-since-update <ct> > 5000)
   (<v> ^command <cmd>
        ^motor.trajectories <traj>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> -^stop
          ^status << running continuing >>
          ^id <cid>)
   (<traj> ^set <set>)
   (<set> ^command-id <cid>
          ^trajectory <r>)
   (<r> ^waypoints <wv>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name stop-command)
}

### Stop options for planning failures

sp {stop-request*propose*stop-command*planning-failure
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs.command <cmd>
              ^target <t>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^failures.planning-failure > 10
         ^status << running continuing >>
        -^stop)
-->
   (<s> ^operator <o> + =)
   (<o> ^name stop-command)
}

sp {stop-request*propose*stop-command*goal-failure
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs.command <cmd>
              ^target <t>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^failures.goal-invalid > 10
         ^status << running continuing >>
        -^stop)
   -->
   (<s> ^operator <o> + =)
   (<o> ^name stop-command)
}

sp {stop-request*apply*stop-command
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs.command <cmd>
              ^target <t>
              ^operator.name stop-command)
   (<cmd> ^find-trajectories <ft>)
   -->
   (<ft> ^stop now)
}

# XXX Need to stop the planning THEN halt
sp {stop-request*propose*stop-and-halt*start-failure
   (state <s> ^superstate nil
              ^agent-name value-based-stop
              ^svs.command <cmd>
              ^target <t>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^failures.start-invalid > 10
         ^status << running continuing >>
        -^stop)
   -->
   (write |Reached an invalid start state!|)
   (halt)
}

