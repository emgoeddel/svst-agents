# If the superstate has impassed on put-down, start the put-down process

############## TARGET ################
sp {put-down*propose*get-put-down-target
   (state <s> ^name put-down
              ^target-object
             -^target-area
              ^topstate-svs.command <cmd>)
-->
   (<s> ^operator <o> +)
   (<o> ^name get-put-down-target)
}

sp {put-down*apply*get-put-down-target*orientation
   (state <s> ^name put-down
              ^held-object <h>
              ^target-object <t>
              ^topstate-svs.command <cmd>
              ^operator.name get-put-down-target)
-->
   (<cmd> ^extract_once <eo>)
   (<eo> ^type grasp_first
         ^a <a>
         ^frame self)
   (<a> ^type node
        ^id <h>)
}

sp {put-down*apply*get-put-down-target*area
   (state <s> ^name put-down
              ^held-object <h>
              ^target-object <t>
              ^topstate-svs.command <cmd>
              ^operator.name get-put-down-target)
-->
   (<cmd> ^extract_once <eo>)
   (<eo> ^type put_down_area
         ^holding <hn>
         ^target <tn>
         ^frame self)
   (<hn> ^type node
         ^id <h>)
   (<tn> ^type node
         ^id <t>)
}

############## FIND TRAJECTORIES ################
sp {put-down*propose*make-find-trajectories
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>
              ^target-area)
   (<cmd> -^find-trajectories)
-->
   (<s> ^operator <o> +)
   (<o> ^name make-find-trajectories)
}

sp {put-down*apply*make-find-trajectories*mast
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>
              ^target-area <ta>
              ^held-object <oid>
             -^objectives none
              ^operator.name make-find-trajectories)
   (<ta> ^center <c>
         ^dimensions <d>
         ^gripper-orientation <go>)
   (<go> ^roll <gro>
         ^pitch <gpi>
         ^yaw <gya>)
-->
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^target <pt>
         ^holding-object <oid>
         ^max-time 10
         ^max-number 30)
   (<pt> ^center <c>
         ^size <d>
         ^orientation <or>
         ^frame self)
   (<or> ^x <gro>
         ^y <gpi>
         ^z <gya>)
}

sp {put-down*apply*make-find-trajectories*no-mast
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>
              ^planning-target <pt>
              ^held-object <oid>
              ^objectives none
              ^operator.name make-find-trajectories)
-->
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^target <pt>
         ^holding-object <oid>
         ^max-number 3)
}

############## SELECT TRAJECTORY ################

# Let the agent stop a command if needed before doing selection
sp {put-down*prefer*stop-over-select
   (state <s> ^name put-down
              ^operator <op1> +
              ^operator <op2> +)
   (<op1> ^name stop-command)
   (<op2> ^name make-select)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {put-down*propose*do-selection
   (state <s> ^name put-down
             -^selection-result.set-id <sid>
              ^objectives { <objs> <> none }
              ^topstate-svs <v>)
   (<v> ^command <cmd>
        ^motor.trajectories <t>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^id <sid>
         ^status << stopped complete >> )
-->
   (<s> ^operator <o> +)
   (<o> ^name do-selection
        ^trajectory-set <sid>
        ^objectives <objs>)
}

# Note not used for actually selecting a trajectory, just output
sp {put-down*propose*do-selection*no-mast
   (state <s> ^name put-down
             -^selection-result.set-id <sid>
              ^objective none
              ^topstate-svs <v>)
   (<v> ^command <cmd>
        ^motor.trajectories <t>)
   (<cmd> ^find-trajectories <ft>)
   (<ft> ^id <sid>
         ^status << stopped complete >> )
-->
   (<s> ^operator <o> +)
   (<o> ^name do-selection
        ^trajectory-set <sid>
        ^objectives none)
}

############## EXEC TRAJECTORY ################
sp {put-down*propose*make-execute
   (state <s> ^name put-down
              ^selection-result <sr>
             -^objective none
              ^topstate-svs.command <cmd>)
   (<cmd> ^find-trajectories.id <sid>
         -^execute-trajectory)
   (<sr> ^trajectory-id <tid>
         ^set-id <sid>)
-->
   (<s> ^operator <o> +)
   (<o> ^name make-execute
        ^trajectory-set <sid>
        ^trajectory-id <tid>)
}

sp {put-down*propose*make-execute*no-mast
   (state <s> ^name put-down
              ^selection-result <sr>
              ^objective none
              ^topstate-svs.command <cmd>)
   (<cmd> ^find-trajectories.id <sid>
         -^execute-trajectory)
   (<sr> ^set-id <sid>) # Selection result not used in this case!
-->
   (<s> ^operator <o> +)
   (<o> ^name make-execute
        ^trajectory-set <sid>
        ^trajectory-id 0)
}

sp {put-down*apply*make-execute
   (state <s> ^name put-down
              ^topstate-svs <v>
              ^operator <op>)
   (<op> ^name make-execute
         ^trajectory-set <sid>
         ^trajectory-id <tid>)
   (<v> ^command <c>)
-->
   (<c> ^execute-trajectory <x>)
   (<x> ^set-id <sid>
        ^trajectory-id <tid>)
}

############## DROP POSE ################

sp {put-down*propose*get-drop-pose
   (state <s> ^name put-down
              ^target-object
             -^drop-movement
              ^topstate-svs.command <cmd>)
   (<cmd> ^execute-trajectory <x>)
   (<x> ^status finished)
-->
   (<s> ^operator <o> +)
   (<o> ^name get-drop-pose)
}

sp {put-down*apply*get-drop-pose
   (state <s> ^name put-down
              ^held-object <id>
              ^topstate-svs.command <cmd>
              ^operator.name get-drop-pose)
-->
    (<cmd> ^extract_once <eo>)
    (<eo> ^type grasp_vector
          ^a <a>)
    (<a> ^type node
         ^id <id>)
}

############## STRAIGHT LINE IN ################

sp {put-down*propose*do-straight-line-in
   (state <s> ^name put-down
              ^drop-movement
              ^topstate-svs.command <cmd>)
   (<cmd> -^straight-line-motion
          -^set-gripper)
-->
   (<s> ^operator <o> +)
   (<o> ^name do-straight-line-in)
}

sp {put-down*apply*do-straight-line-in
   (state <s> ^name put-down
              ^drop-movement <t>
              ^topstate-svs.command <cmd>
              ^operator.name do-straight-line-in)
   (<t> ^x <px>
        ^y <py>
        ^z <pz>)
-->
   (<cmd> ^straight-line-motion <sl> )
   (<sl> ^target <xyz>
         ^type relative)
   (<xyz> ^x <px>
          ^y <py>
          ^z <pz>)
}

############## OPEN GRIPPER ################
sp {put-down*propose*open-gripper
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>)
   (<cmd> ^straight-line-motion <sli>
         -^set-gripper)
   (<sli> ^status finished)
-->
   (<s> ^operator <o> +)
   (<o> ^name open-gripper)
}

sp {put-down*apply*open-gripper
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>
              ^operator.name open-gripper)
   (<cmd> ^straight-line-motion <sli>)
-->
   (<cmd> ^set-gripper <sg>
          ^straight-line-motion <sli> -)
   (<sg> ^target 0.10) #open
}

############## STRAIGHT LINE OUT ################
sp {put-down*propose*do-straight-line-out
   (state <s> ^name put-down
              ^drop-movement
              ^topstate-svs.command <cmd>)
   (<cmd> ^set-gripper <cg>
         -^straight-line-motion)
   (<cg> ^target 0.10 #open
         ^status finished)
-->
   (<s> ^operator <o> +)
   (<o> ^name do-straight-line-out)
}

sp {put-down*apply*do-straight-line-out
   (state <s> ^name put-down
              ^drop-movement <dm>
              ^topstate-svs.command <cmd>
              ^operator.name do-straight-line-out)
   (<dm> ^x <px>
         ^y <py>
         ^z <pz>)
-->
   (<cmd> ^straight-line-motion <sl> )
   (<sl> ^target <xyz>
         ^type relative)
   (<xyz> ^x <px>
          ^y <py>
          ^z (+ 0.01 (- <pz>)))
}

############## CLOSE GRIPPER ################
sp {put-down*propose*close-gripper
   (state <s> ^name put-down
             -^finished-moving
              ^topstate-svs.command <cmd>)
   (<cmd> ^straight-line-motion <sl>
          ^set-gripper <og>
         -^set-gripper.target 0.0)
   (<sl> ^status finished)
   (<og> ^target 0.10
         ^status finished)
-->
   (<s> ^operator <o> +)
   (<o> ^name close-gripper)
}

sp {put-down*apply*close-gripper
   (state <s> ^name put-down
              ^topstate-svs.command <cmd>
              ^operator.name close-gripper)
-->
   (<cmd> ^set-gripper <sg> )
   (<sg> ^target 0.0) #closed
}

############## UPDATE HELD ################
sp {put-down*propose*update-held-object
   (state <s> ^name put-down
              ^held-object <oid>
              ^finished-moving)
-->
   (<s> ^operator <o> +)
   (<o> ^name update-held-object
        ^possible-object <oid>)
}
